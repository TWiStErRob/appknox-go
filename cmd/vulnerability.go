package cmd

import (
	"fmt"
	"os"

	"github.com/appknox/appknox-go/appknox"
	"github.com/landoop/tableprinter"
	"github.com/spf13/cobra"
)

// vulnerabilityCmd represents the vulnerability command
var vulnerabilityCmd = &cobra.Command{
	Use:   "vulnerability",
	Short: "Get vulnerability",
	Long:  `Get vulnerability`,
	Run: func(cmd *cobra.Command, args []string) {
		vulnerabiltyObject, err := appknox.Vulnerability(args)
		if err != nil {
			fmt.Println(err.Error())
			os.Exit(1)
		}
		type data struct {
			Name         string `header:"name"`
			Description  string `header:"description"`
			Intro        string `header:"intro"`
			Compliant    string `header:"compliant"`
			NonCompliant string `header:"non-compliant"`
		}

		items := []data{}
		result := vulnerabiltyObject.Data
		items = append(items,
			data{
				result.Attributes.Name,
				result.Attributes.Description,
				result.Attributes.Intro,
				result.Attributes.Compliant,
				result.Attributes.NonCompliant,
			})

		tableprinter.Print(os.Stdout, items)
	},
}

func init() {
	rootCmd.AddCommand(vulnerabilityCmd)
}
